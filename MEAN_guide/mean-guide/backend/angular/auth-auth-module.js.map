{"version":3,"sources":["webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/signup/signup.component.css","webpack:///./src/app/auth/signup/signup.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["module.exports = \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form (submit)=\\\"onLogin(loginForm)\\\" #loginForm=\\\"ngForm\\\">\\n    <mat-form-field>\\n      <input\\n        matInput\\n        name=\\\"email\\\"\\n        ngModel\\n        type=\\\"email\\\"\\n        placeholder=\\\"E-Mail\\\"\\n        #emailInput=\\\"ngModel\\\"\\n        required\\n        email\\n        >\\n        <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a valid email</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput type=\\\"password\\\"\\n        name=\\\"password\\\"\\n        ngModel\\n        #passwordInput=\\\"ngModel\\\" placeholder=\\\"Password\\\"\\n        required>\\n        <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter a valid password</mat-error>\\n    </mat-form-field>\\n    <button *ngIf=\\\"!isLoading\\\"\\n      mat-raised-button\\n      color=\\\"accent\\\"\\n      type=\\\"submit\\\"\\n      >Login</button>\\n      <!-- <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner> -->\\n  </form>\\n</mat-card>\\n\"","module.exports = \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form (submit)=\\\"onSignup(signupForm)\\\" #signupForm=\\\"ngForm\\\">\\n    <mat-form-field>\\n      <input\\n        matInput\\n        name=\\\"email\\\"\\n        ngModel\\n        type=\\\"email\\\"\\n        placeholder=\\\"E-Mail\\\"\\n        #emailInput=\\\"ngModel\\\"\\n        required\\n        email\\n        >\\n        <mat-error *ngIf=\\\"emailInput.invalid\\\">Please enter a valid email</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput type=\\\"password\\\"\\n        name=\\\"password\\\"\\n        ngModel\\n        #passwordInput=\\\"ngModel\\\" placeholder=\\\"Password\\\"\\n        required>\\n        <mat-error *ngIf=\\\"passwordInput.invalid\\\">Please enter a valid password</mat-error>\\n    </mat-form-field>\\n    <button *ngIf=\\\"!isLoading\\\"\\n      mat-raised-button\\n      color=\\\"accent\\\"\\n      type=\\\"submit\\\"\\n      >Signup</button>\\n      <!-- <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner> -->\\n  </form>\\n</mat-card>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent }\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthRoutingModule } from './auth-routing.module';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignupComponent\n  ],\n  imports: [\n    AngularMaterialModule,\n    CommonModule,\n    FormsModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule { }\n","module.exports = \"mat-form-field,\\ntextarea {\\n  width: 100%;\\n}\\n\\nmat-spinner {\\n  margin: auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2F1dGgvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkLFxudGV4dGFyZWEge1xuICB3aWR0aDogMTAwJTtcbn1cblxubWF0LXNwaW5uZXIge1xuICBtYXJnaW46IGF1dG87XG59XG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  onLogin(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.login(form.value.email, form.value.password);\n  }\n  constructor(public authService: AuthService) { }\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authService => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n\n}\n\n\n","module.exports = \"mat-form-field {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NgForm, EmailValidator } from '@angular/forms';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit, OnDestroy {\n\n  isLoading = false;\n  private authStatusSub: Subscription;\n\n  onSignup(form: NgForm) {\n    if (form.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.authService.createUser(form.value.email, form.value.password);\n  }\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authService => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n\n}\n"],"sourceRoot":""}