{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/error/error.component.html","webpack:///./src/app/header/header.component.html","webpack:///./src/app/posts/create-post/create-post.component.html","webpack:///./src/app/posts/post-list/post-list.component.html","webpack:///./src/app/angular-material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-interceptor.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/error-interceptor.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/posts/create-post/create-post.component.css","webpack:///./src/app/posts/create-post/create-post.component.ts","webpack:///./src/app/posts/create-post/mime-type.validator.ts","webpack:///./src/app/posts/post-list/post-list.component.css","webpack:///./src/app/posts/post-list/post-list.component.ts","webpack:///./src/app/posts/post.service.ts","webpack:///./src/app/posts/posts.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\",\n\t\t\"auth-auth-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<app-header></app-header>\\n<main>\\n  <router-outlet></router-outlet>\\n</main>\\n\"","module.exports = \"<h1 mat-dialog-title>An Error Occurred!</h1>\\n<div mat-dialog-content>\\n  <p class=\\\"mat-body-1\\\">{{ data.message }}</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button mat-dialog-close>Okay</button>\\n</div>\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>\\n    <a routerLink=\\\"/\\\">MyMessages</a>\\n  </span>\\n  <span class=\\\"spacer\\\"></span>\\n  <ul>\\n    <li *ngIf=\\\"userIsAuthenticated\\\">\\n      <a mat-button routerLink=\\\"create\\\" routerLinkActive=\\\"mat-accent\\\">New Post</a>\\n    </li>\\n    <li>\\n      <a routerLink=\\\"\\\"></a>\\n    </li>\\n    <li *ngIf=\\\"!userIsAuthenticated\\\">\\n      <a mat-button routerLink=\\\"/auth/login\\\" routerLinkActive=\\\"mat-accent\\\">Login</a>\\n    </li>\\n    <li *ngIf=\\\"!userIsAuthenticated\\\">\\n      <a mat-button routerLink=\\\"/auth/signup\\\" routerLinkActive=\\\"mat-accent\\\">Signup</a>\\n    </li>\\n    <li *ngIf=\\\"userIsAuthenticated\\\">\\n      <button mat-button (click)=\\\"onLogout()\\\">Logout</button>\\n    </li>\\n  </ul>\\n</mat-toolbar>\\n\"","module.exports = \"<mat-card>\\n  <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n  <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSavePost()\\\" *ngIf=\\\"!isLoading\\\">\\n    <mat-form-field>\\n      <input\\n        matInput\\n        type=\\\"text\\\"\\n        formControlName=\\\"title\\\"\\n        placeholder=\\\"Post Title\\\"\\n        >\\n        <mat-error *ngIf=\\\"form.get('title').invalid\\\">Please enter a post title</mat-error>\\n    </mat-form-field>\\n    <div>\\n      <button mat-stroked-button mat-button type=\\\"button\\\" (click)=\\\"filePicker.click()\\\">Pick Image</button>\\n      <input type=\\\"file\\\" #filePicker\\n      (change)=\\\"onImagePicked($event)\\\">\\n    </div>\\n    <div class=\\\"image-preview\\\" *ngIf=\\\"imagePreview !== '' && imagePreview && form.get('image').valid\\\">\\n      <img [src]=\\\"imagePreview\\\" [alt]=\\\"form.value.title\\\">\\n    </div>\\n    <mat-form-field>\\n      <textarea\\n        matInput\\n        formControlName=\\\"content\\\"\\n        placeholder=\\\"Post Content\\\"\\n        ></textarea>\\n        <mat-error *ngIf=\\\"form.get('content').invalid\\\">Please enter a post content</mat-error>\\n    </mat-form-field>\\n    <button\\n      mat-raised-button\\n      color=\\\"accent\\\"\\n      type=\\\"submit\\\"\\n      [disabled]=\\\"!form.valid\\\">Save Post</button>\\n  </form>\\n</mat-card>\\n\\n\\n\"","module.exports = \"<mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\n<mat-accordion multi=\\\"true\\\" *ngIf=\\\"posts.length > 0 && !isLoading\\\">\\n  <mat-expansion-panel *ngFor=\\\"let post of posts\\\">\\n    <mat-expansion-panel-header>\\n      {{ post.title }}\\n    </mat-expansion-panel-header>\\n    <div class=\\\"post-image\\\">\\n      <img [src]=\\\"post.imagePath\\\" [alt]=\\\"post.title\\\">\\n    </div>\\n    <p>{{ post.content }}</p>\\n    <mat-action-row *ngIf=\\\"userIsAuthenticated && userId == post.creator\\\">\\n      <a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/edit', post.id]\\\">EDIT</a>\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"onDelete(post.id)\\\">DELETE</button>\\n    </mat-action-row>\\n  </mat-expansion-panel>\\n</mat-accordion>\\n<mat-paginator [length]=\\\"totalPosts\\\" [pageSize]=\\\"postsPerPage\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\" (page)=\\\"onChangedPage($event)\\\"\\n*ngIf=\\\"posts.length > 0\\\">\\n\\n</mat-paginator>\\n<p class=\\\"info-text mat-body-1\\\" *ngIf=\\\"posts.length <= 0 && !isLoading\\\">No posts added yet!</p>\\n\\n\\n\\n\"","import { NgModule } from \"@angular/core\";\nimport {\n  MatInputModule,\n  MatCardModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatExpansionModule,\n  MatProgressSpinnerModule,\n  MatPaginatorModule,\n  MatDialogModule\n} from '@angular/material';\n\n\n@NgModule({\n  // imports: [\n  //   MatInputModule,\n  //   MatCardModule,\n  //   MatButtonModule,\n  //   MatToolbarModule,\n  //   MatExpansionModule,\n  //   MatProgressSpinnerModule,\n  //   MatPaginatorModule,\n  //   MatDialogModule\n  // ],\n  exports: [\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    MatPaginatorModule,\n    MatDialogModule\n  ]\n})\nexport class AngularMaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostListComponent } from './posts/post-list/post-list.component';\nimport { CreatePostComponent } from './posts/create-post/create-post.component';\nimport { AuthGuard } from './auth/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: PostListComponent },\n  { path: 'create', component: CreatePostComponent, canActivate: [AuthGuard] },\n  { path: 'edit/:postId', component: CreatePostComponent, canActivate: [AuthGuard]},\n  { path: 'auth', loadChildren: './auth/auth.module#AuthModule'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: [AuthGuard]\n})\nexport class AppRoutingModule { }\n","module.exports = \"main {\\n  margin-top: 1rem;\\n  width: 80%;\\n  margin: 1rem auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWFpbiB7XG4gIG1hcmdpbi10b3A6IDFyZW07XG4gIHdpZHRoOiA4MCU7XG4gIG1hcmdpbjogMXJlbSBhdXRvO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n  ngOnInit() {\n    this.authService.autoAuthUser();\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth/auth-interceptor';\nimport { ErrorInterceptor } from './error-interceptor';\nimport { ErrorComponent } from './error/error.component';\nimport { AngularMaterialModule } from './angular-material.module';\nimport { PostsModule } from './posts/posts.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    PostsModule,\n    ],\n  providers: [{\n    provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true\n  },\n  {\n    provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true\n  }\n],\n  bootstrap: [AppComponent],\n  entryComponents: [ErrorComponent]\n})\nexport class AppModule { }\n","import { HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n  intercept(req: HttpRequest<any>, next) {\n    // console.log(\"INTERCEPTER***:\",req)\n    const authToken = this.authService.getToken();\n    const authRequest = req.clone({\n      headers: req.headers.set('Authorization', 'Bearer ' + authToken)\n    });\n    return next.handle(authRequest);\n  }\n}\n","import { CanActivate, Router, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot):\n    boolean | Observable<boolean> | Promise<boolean> {\n      const isAuth = this.authService.getIsAuth();\n      if (!isAuth) {\n        this.router.navigate(['/auth/login']);\n      }\n      return isAuth;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthData } from './auth-data.model';\nimport { Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\nconst BACKEND_URL = environment.apiUrl + '/user/';\n\n@Injectable({providedIn: 'root'})\nexport class AuthService {\n  private isAuthenticated = false;\n  private token: string;\n  // private tokenTimer: NodeJS.Timer;\n  private tokenTimer;\n  private userId: string;\n  // you could create a separate user model with more information about the user\n  private authStatusListener = new Subject<boolean>();\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getToken() {\n    return this.token;\n  }\n\n  getIsAuth() {\n    return this.isAuthenticated;\n  }\n\n  getUserId() {\n    return this.userId;\n  }\n\n  getAuthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n\n  createUser(email: string, password: string) {\n    const authData: AuthData = {email, password};\n    return this.http.post(BACKEND_URL + 'signup', authData)\n    .subscribe(() => {\n      this.router.navigate(['/']);\n    }, err => {\n      this.authStatusListener.next(false);\n    });\n  }\n\n  login(email: string, password: string) {\n    const authData: AuthData = {email, password};\n    this.http.post<{token: string, expiresIn: number, userId: string}>(BACKEND_URL + 'login', authData)\n      .subscribe(response => {\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expiresInDuration = response.expiresIn;\n          this.setAuthTimer(expiresInDuration);\n          this.isAuthenticated = true;\n          this.userId = response.userId;\n          this.authStatusListener.next(true);\n          const now = new Date();\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n          // console.log(expirationDate);\n          this.saveAuthData(token, expirationDate, this.userId);\n          this.router.navigate(['/']);\n        }\n      }, err => {\n        this.authStatusListener.next(false);\n      });\n\n  }\n\n  autoAuthUser() {\n    const authInformation = this.getAuthData();\n    if (!authInformation) {\n      return;\n    }\n    const now = new Date();\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\n    if (expiresIn > 0) {\n      this.token = authInformation.token;\n      this.isAuthenticated = true;\n      this.userId = authInformation.userId;\n      this.setAuthTimer(expiresIn / 1000);\n      this.authStatusListener.next(true);\n    }\n  }\n\n  logout() {\n    this.token = null;\n    this.isAuthenticated = false;\n    this.authStatusListener.next(false);\n    clearTimeout(this.tokenTimer);\n    this.clearAuthData();\n    this.userId = null;\n    this.router.navigate(['/']);\n  }\n\n  private setAuthTimer(duration: number) {\n    // console.log('Setting timer: ' + duration);\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n\n  private saveAuthData(token: string, expirationDate: Date, userId: string) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n    localStorage.setItem('userId', userId);\n  }\n\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n    localStorage.removeItem('userId');\n  }\n\n  private getAuthData() {\n    const token = localStorage.getItem('token');\n    const expirationDate = localStorage.getItem('expiration');\n    const userId = localStorage.getItem('userId');\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token,\n      expirationDate: new Date(expirationDate),\n      userId\n    }\n  }\n}\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { ErrorComponent } from './error/error.component';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private dialog: MatDialog) {}\n  intercept(req: HttpRequest<any>, next) {\n    return next.handle(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = 'An unknow error occurred!';\n        if (error.error.message) {\n          errorMessage = error.error.message;\n        }\n        this.dialog.open(ErrorComponent, {data: {message: errorMessage}});\n        return throwError(error);\n      })\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n  message = 'An unknown error!';\n  constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"ul {\\n  list-style: none;\\n  padding: 0px;\\n  margin: 0px;\\n}\\n\\na {\\n  text-decoration: none;\\n  color: white;\\n}\\n\\nul {\\n  display: flex;\\n}\\n\\n.spacer {\\n  flex: 1 1 auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMHB4O1xuICBtYXJnaW46IDBweDtcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG51bCB7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5zcGFjZXIge1xuICBmbGV4OiAxIDEgYXV0bztcbn1cbiJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy{\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n\n  constructor(private authService: AuthService) { }\n\n\n\n  ngOnInit() {\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService.getAuthStatusListener().subscribe(\n      isAuthenticated => {\n        this.userIsAuthenticated = isAuthenticated;\n      }\n    );\n  }\n\n  onLogout() {\n    this.authService.logout();\n  }\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n\n}\n","module.exports = \"mat-form-field,\\ntextarea {\\n  width: 100%;\\n}\\n\\nmat-spinner {\\n  margin: auto;\\n}\\n\\ninput[type=\\\"file\\\"] {\\n  visibility: hidden;\\n}\\n\\n.image-preview {\\n  height: 5rem;\\n  margin: 1rem 0;\\n}\\n\\n.image-preview img {\\n  height: 100%\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvY3JlYXRlLXBvc3QvY3JlYXRlLXBvc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osY0FBYztBQUNoQjs7QUFFQTtFQUNFO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9wb3N0cy9jcmVhdGUtcG9zdC9jcmVhdGUtcG9zdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQsXG50ZXh0YXJlYSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5tYXQtc3Bpbm5lciB7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuaW5wdXRbdHlwZT1cImZpbGVcIl0ge1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi5pbWFnZS1wcmV2aWV3IHtcbiAgaGVpZ2h0OiA1cmVtO1xuICBtYXJnaW46IDFyZW0gMDtcbn1cblxuLmltYWdlLXByZXZpZXcgaW1nIHtcbiAgaGVpZ2h0OiAxMDAlXG59XG4iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PostService } from '../post.service';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Post } from '../post.model';\nimport { mimeType } from './mime-type.validator';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-create-post',\n  templateUrl: './create-post.component.html',\n  styleUrls: ['./create-post.component.css']\n})\nexport class CreatePostComponent implements OnInit, OnDestroy {\n  enteredTitle = '';\n  enteredContent = '';\n  post: Post;\n  isLoading = false;\n  form: FormGroup;\n  imagePreview: string;\n  private mode = 'create';\n  private postId: string;\n  private authStatusSub: Subscription;\n\n  constructor(public postsService: PostService, public route: ActivatedRoute, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(\n      authStatus => {\n        this.isLoading = false;\n      }\n    );\n    this.form = new FormGroup({\n      'title': new FormControl(null, {\n        validators: [Validators.required, Validators.minLength(3)]}),\n      'content': new FormControl(null, [Validators.required]),\n      'image': new FormControl(null, {\n        validators: [Validators.required],\n        asyncValidators: [mimeType]\n      })\n    });\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has('postId')) {\n        this.mode = 'edit';\n        this.postId = paramMap.get('postId');\n        this.isLoading = true;\n        this.postsService.getPost(this.postId).subscribe(postData => {\n          this.isLoading = false;\n          this.post = {\n            id: postData._id,\n            title: postData.title,\n            content: postData.content,\n            imagePath: postData.imagePath,\n            creator: postData.creator\n          };\n          this.form.setValue({\n            'title': this.post.title,\n            'content': this.post.content,\n            'image': this.post.imagePath\n          });\n        });\n      } else {\n        this.mode = 'create';\n        this.postId = null;\n      }\n    }\n    );\n  }\n  onImagePicked(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({image: file});\n    this.form.get('image').updateValueAndValidity();\n    const reader = new FileReader();\n    reader.onload = () => {\n      this.imagePreview = reader.result as string;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  onSavePost() {\n    if (this.form.invalid) {\n      return;\n    }\n    // console.dir(postInput)\n    this.isLoading = true;\n    if (this.mode === 'create') {\n      this.postsService.addPost(this.form.value.title, this.form.value.content, this.form.value.image);\n    } else {\n      this.postsService.updatePost(this.postId, this.form.value.title, this.form.value.content,\n        this.form.value.image\n        );\n    }\n    this.form.reset();\n  }\n\n  ngOnDestroy() {\n    this.authStatusSub.unsubscribe();\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { Observable, Observer, of } from 'rxjs';\n\nexport const mimeType = (control: AbstractControl): Promise<{[key: string]: any}> | Observable<{[key: string]: any}> => {\n  if (typeof(control.value) === 'string') {\n    return of(null);\n  }\n  const file = control.value as File;\n  const fileReader = new FileReader();\n  // tslint:disable-next-line: deprecation\n  const frObs = Observable.create((observer: Observer<{[key: string]: any}>) => {\n    fileReader.addEventListener('loadend', () => {\n      const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\n      let header = '';\n      let isValid = false;\n      for (let i = 0; i < arr.length; i ++) {\n        header += arr[i].toString(16);\n      }\n      switch (header) {\n        case '89504e47':\n          isValid = true;\n          break;\n        case 'ffd8ffe0':\n        case 'ffd8ffe1':\n        case 'ffd8ffe2':\n        case 'ffd8ffe3':\n        case 'ffd8ffe8':\n          isValid = true;\n          break;\n        default:\n          isValid = false; // Or you can use the blob.type as fallback\n          break;\n      }\n      if (isValid) {\n        observer.next(null);\n      } else {\n        observer.next({ invalidMimeType: true});\n      }\n      observer.complete();\n    });\n    fileReader.readAsArrayBuffer(file);\n  });\n  return frObs;\n};\n","module.exports = \":host {\\n  display: block;\\n  margin-top: 1rem;\\n}\\n\\nmat-spinner {\\n  margin: auto;\\n}\\n\\nmat-paginator {\\n margin-top: 16px;\\n}\\n\\n.info-text {\\n  text-align: center;\\n}\\n\\n.post-image {\\n  width: 100%;\\n}\\n\\n.post-image img {\\n  width: 100%;\\n  box-shadow: 1px 1px 5px rgba(0,0,0,.5);\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1saXN0L3Bvc3QtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtDQUNDLGdCQUFnQjtBQUNqQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxzQ0FBc0M7QUFDeEMiLCJmaWxlIjoic3JjL2FwcC9wb3N0cy9wb3N0LWxpc3QvcG9zdC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tdG9wOiAxcmVtO1xufVxuXG5tYXQtc3Bpbm5lciB7XG4gIG1hcmdpbjogYXV0bztcbn1cblxubWF0LXBhZ2luYXRvciB7XG4gbWFyZ2luLXRvcDogMTZweDtcbn1cblxuLmluZm8tdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnBvc3QtaW1hZ2Uge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnBvc3QtaW1hZ2UgaW1nIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJveC1zaGFkb3c6IDFweCAxcHggNXB4IHJnYmEoMCwwLDAsLjUpO1xufVxuIl19 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Post } from '../post.model';\nimport { PostService } from '../post.service';\nimport { Subscription } from 'rxjs';\nimport { PageEvent } from '@angular/material';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-post-list',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n\n  // posts = [\n  //   {title: 'First Post', content: 'This is the first post\\'s content'},\n  //   {title: 'Second Post', content: 'This is the second post\\'s content'},\n  //   {title: 'Third Post', content: 'This is the third post\\'s content'},\n  //   {title: 'Fourth Post', content: 'This is the fourth post\\'s content'},\n  // ];\n\n  posts: Post[] = [];\n  isLoading = false;\n  totalPosts = 0;\n  postsPerPage = 2;\n  currentPage = 1;\n  pageSizeOptions = [1, 2, 5, 10];\n  userIsAuthenticated;\n  userId: string;\n  private postsSub: Subscription;\n  private authStatusSub: Subscription;\n\n  constructor(public postsService: PostService, private authService: AuthService) {}\n\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.postsService.getPosts( this.postsPerPage, this.currentPage);\n    this.userId = this.authService.getUserId();\n    this.postsSub = this.postsService.getPostUpdateListener()\n    .subscribe(\n      (\n        postData: any\n        // {\n        //   posts: Post[],\n        //   postCount: number\n        // }\n      ) => {\n      this.isLoading = false;\n      this.totalPosts = postData.postCount;\n      this.posts = postData.posts;\n    });\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe(isAuthenticated => {\n      this.userIsAuthenticated = isAuthenticated;\n      this.userId = this.authService.getUserId();\n    });\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.isLoading = true;\n    this.currentPage = pageData.pageIndex + 1;\n    this.postsPerPage = pageData.pageSize;\n    this.postsService.getPosts(this.postsPerPage, this.currentPage);\n  }\n\n  onDelete(postId: string) {\n    this.isLoading = true;\n    this.postsService.deletePost(postId).subscribe(() => {\n      this.postsService.getPosts(this.postsPerPage, this.currentPage);\n    }, () => {\n      this.isLoading = false;\n    });\n  }\n\n\n  ngOnDestroy() {\n    this.postsSub.unsubscribe();\n    this.authStatusSub.unsubscribe();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Post } from './post.model';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\nconst BACKEND_URL = environment.apiUrl + '/posts/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  private posts: Post[] = [];\n  private postsUpdated = new Subject<{ posts: Post[]; postCount: number }>();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  getPosts(postsPerPage: number, currentPage: number) {\n    const queryParams = `?pageSize=${postsPerPage}&page=${currentPage}`;\n    this.http.get<{ message: string, posts: any, maxPosts: number }>(BACKEND_URL + queryParams)\n      .pipe(\n        map((postData) => {\n          return {\n            posts: postData.posts.map(post => {\n            return {\n              title: post.title,\n              content: post.content,\n              id: post._id,\n              imagePath: post.imagePath,\n              creator: post.creator\n            };\n          }),\n          maxPosts: postData.maxPosts\n        };\n        }))\n      .subscribe((transformedPostData) => {\n        // console.log(transformedPostData)\n        this.posts = transformedPostData.posts;\n        this.postsUpdated.next({\n          posts: [...this.posts],\n          postCount: transformedPostData.maxPosts\n        });\n      });\n  }\n\n  getPostUpdateListener() {\n    return this.postsUpdated.asObservable();\n  }\n\n  getPost(id: string) {\n    return this.http\n      .get<{_id: string, content: string, title: string, imagePath: string, creator: string }>(BACKEND_URL + id);\n  }\n\n  addPost(title: string, content: string, image: File) {\n    // const post: Post = {\n    //   id: null,\n    //   title,\n    //   content,\n    //   imagePath\n    // };\n    const postData = new FormData();\n    postData.append('title', title);\n    postData.append('content', content);\n    postData.append('image', image, title);\n    this.http\n      .post<{message: string, postId: string }>(BACKEND_URL, postData)\n      .subscribe((responseData) => {\n        // const post: Post = {\n        //   id: responseData.postId,\n        //   title,\n        //   content,\n        //   imagePath: responseData.post.imagePath\n        // };\n        // console.log(\"post.service.ts(61)\",responseData.post)\n        // const id = responseData.postId;\n        // post.id = id;\n        // this.posts.push(post);\n        // this.postsUpdated.next([...this.posts]);\n        this.router.navigate(['/']);\n      });\n  }\n\n  updatePost(id: string, title: string, content: string, image: File | string) {\n    let postData: Post | FormData;\n    if (typeof (image) === 'object') {\n      postData = new FormData();\n      postData.append(\"id\", id);\n      postData.append(\"title\", title);\n      postData.append(\"content\", content);\n      postData.append(\"image\", image, title);\n\n    } else {\n      postData = {\n        id,\n        title,\n        content,\n        imagePath: image,\n        creator: null\n      };\n    }\n    this.http\n      .put(BACKEND_URL + id, postData)\n      .subscribe(response => {\n        // const updatedPosts = [...this.posts];\n        // const oldPostIndex = updatedPosts.findIndex(p => p.id === id);\n        // const post: Post = {\n        //   id,\n        //   title,\n        //   content,\n        //   // imagePath: response.imagePath\n        // };\n        // updatedPosts[oldPostIndex] = post;\n        // this.posts = updatedPosts;\n        // this.postsUpdated.next([...this.posts]);\n        this.router.navigate(['/']);\n      });\n  }\n\n  deletePost(postId: string) {\n    return this.http.delete(BACKEND_URL + postId);\n      // .subscribe(() => {\n      //   const updatedPosts = this.posts.filter(post => post.id !== postId);\n      //   this.posts = updatedPosts;\n      //   this.postsUpdated.next([...this.posts]);\n      // });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CreatePostComponent } from './create-post/create-post.component';\nimport { PostListComponent } from './post-list/post-list.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularMaterialModule } from '../angular-material.module';\nimport { RouterModule } from '@angular/router';\n\n\n\n@NgModule({\n  declarations: [\n    CreatePostComponent,\n    PostListComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    AngularMaterialModule,\n    RouterModule\n  ]\n})\nexport class PostsModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}